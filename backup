#!/bin/bash
# backup v2.0

pass=""
encrypt=0
backup_folders=""
backup_dest="."

function echo_err() {
    if [ "A$1" != "A" ]; then
        echo -e "\e[31mERROR :\e[0m $1" > /dev/stderr
    fi
}

function helpFunc() {
    echo $"Usage : $0 [option]

Option :
-h or --help ........................... Show help
-f \"<dir1> [dirN]\" ..................... Source folder
-o <outputDir> ......................... Destination folder
-p <pass> .............................. Pass phrase"

    exit 0
}

function verification() {
    if [ "A$backup_folders" != "A" ]; then
        for file in $backup_folders; do
            if [ ! -d $file ]; then
                echo_err $"Source \"$file\" folder does not exist"
                exit 1
            fi
        done
    else
        echo_err $"Source folder is missing"
        exit 1
    fi

    if [ "A$backup_folders" != "A" ]; then
        if [ ! -d $backup_dest ]; then
            echo_err $"Destination \"$backup_dest\" folder does not exist"
            exit 1
        fi
    else
        echo_err $"Destination folder is missing"
        exit 1
    fi

    if [ $encrypt -eq 1 ] && [ "A$pass" = "A" ]; then
        echo_err $"Passphrase is missing"
        exit 1
    fi
}

function encryptFile() {
    echo $"Encryption of $backup_dest/$archive_name"
    if ! gpg --batch --passphrase $pass -c $backup_dest/$archive_name; then
        echo_err $"Something wrong with encrytion"
        exit 1
    fi
    rm $backup_dest/$archive_name
    echo $"Encryption end"
}

function compressFile() {
    date=$(date +%Y-%m-%d)
    hostname=$(hostname -s)
    archive_name="backup_${hostname}_${date}.tar.gz"

    echo $"Compress of $backup_folders to $backup_dest/$archive_name"
    if ! tar czfv $backup_dest/$archive_name $backup_folders; then
        echo_err $"Something wrong with compression"
        exit 1
    fi
    echo $"Backup $backup_dest/$archive_name end"
}

if [ $# -ge 1 ]; then
    for i in $(seq 1 $#); do
        if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then 
            helpFunc
        elif [ "$1" == "-f" ]; then
            shift
            backup_folders=$1
        elif [ "$1" == "-o" ]; then
            shift
            backup_dest=$1
        elif [ "$1" == "-p" ]; then
            shift
            encrypt=1
            pass=$1
        # else
        #     echo "Unknown parameter : $1"
        #     exit 1
        fi
        shift
    done
fi

verification
compressFile
[ $encrypt -eq 1 ] && encryptFile